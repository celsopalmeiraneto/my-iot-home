{"version":3,"sources":["../src/utils.js"],"names":["thresholder","threshold","currentValue","Number","NaN","newValue","min","max","isNaN"],"mappings":";;;;;;;;;AAAA;;;;AAIA,SAASA,WAAT,CAAqBC,SAArB,EAAgC;AAC9B,MAAMC,YAAY,GAAGC,MAAM,CAACC,GAA5B;AAEA,SAAO,UAACC,QAAD,EAAc;AACnB,QAAMC,GAAG,GAAGJ,YAAY,GAAGD,SAA3B;AACA,QAAMM,GAAG,GAAGL,YAAY,GAAGD,SAA3B;;AACA,QAAIE,MAAM,CAACK,KAAP,CAAaN,YAAb,KAA8BG,QAAQ,GAAGC,GAAzC,IAAgDD,QAAQ,GAAGE,GAA/D,EAAoE;AAClEL,MAAAA,YAAY,oCAAGG,QAAH,CAAZ;AACA,aAAO,IAAP;AACD,KAHD,MAGO;AACL,aAAO,KAAP;AACD;AACF,GATD;AAUD","sourcesContent":["/**\n * @param {number} threshold\n * @return {function}\n */\nfunction thresholder(threshold) {\n  const currentValue = Number.NaN;\n\n  return (newValue) => {\n    const min = currentValue - threshold;\n    const max = currentValue + threshold;\n    if (Number.isNaN(currentValue) || newValue < min || newValue > max) {\n      currentValue = newValue;\n      return true;\n    } else {\n      return false;\n    }\n  };\n}\n\nexport {thresholder};\n"],"file":"utils.js"}