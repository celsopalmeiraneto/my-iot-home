{"version":3,"sources":["../../src/sensors/GroveTemperature.js"],"names":["_B","_R0","GroveTemperature","analogicPort","port","Aio","temperatureInCelsius","reading","read","R","Math","log"],"mappings":";;;;;;;AAAA;;AAEA,IAAMA,EAAE,GAAG,IAAX;AACA,IAAMC,GAAG,GAAG,MAAZ;AAEA;;;;;AAIA,SAASC,gBAAT,CAA0BC,YAA1B,EAAwC;AACtC,MAAMC,IAAI,GAAG,IAAIC,SAAJ,CAAQF,YAAR,CAAb;AAEA;;;;AAGA,WAASG,oBAAT,GAAgC;AAC9B,QAAMC,OAAO,GAAGH,IAAI,CAACI,IAAL,EAAhB;AAEA,QAAIC,CAAC,GAAG,OAAOF,OAAP,GAAiB,CAAzB;AACAE,IAAAA,CAAC,GAAGR,GAAG,GAAGQ,CAAV;AAEA,WAAO,KAAKC,IAAI,CAACC,GAAL,CAASF,CAAC,GAAGR,GAAb,IAAoBD,EAApB,GAAyB,IAAI,MAAlC,IAA4C,MAAnD;AACD;;AAED,SAAO;AACLM,IAAAA;AADK,GAAP;AAGD;;eAEcJ,gB","sourcesContent":["import {Aio} from 'mraa';\n\nconst _B = 4275;\nconst _R0 = 100000;\n\n/**\n * @return {object} Object containing functions.\n * @param {number} analogicPort\n */\nfunction GroveTemperature(analogicPort) {\n  const port = new Aio(analogicPort);\n\n  /**\n   * @return {number} The temperature in degreees Celsius\n   */\n  function temperatureInCelsius() {\n    const reading = port.read();\n\n    let R = 1023 / reading - 1;\n    R = _R0 * R;\n\n    return 1 / (Math.log(R / _R0) / _B + 1 / 298.15) - 273.15;\n  }\n\n  return {\n    temperatureInCelsius,\n  };\n}\n\nexport default GroveTemperature;\n"],"file":"GroveTemperature.js"}